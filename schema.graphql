directive @external on FIELD_DEFINITION

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @key(fields: _FieldSet!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

scalar _Any

union _Entity = User

scalar _FieldSet

type _Service {
  sdl: String
}

input CreateUserInput {
  name: String!
  dob: String!
  address: String!
  description: String!
}

"""
The `DateTime` scalar represents a date and time following the ISO 8601 standard
"""
scalar DateTime

enum MathOptions {
  ROUND
  FLOOR
  CEIL
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(id: ID!, input: UpdateUserInput!): User!
  deleteUser(id: ID!): ID!
  _createSnapshot(key: String!): Boolean!
}

type Query {
  users(page: Int, limit: Int, sort: String, dir: String, where: UsersWhere, ref: String): [User]
  user(id: ID!): User
  _typeDefs: String!
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
  _aggregation(type: String, field: String, stat: String!, ref: String): Float!
}

input UpdateUserInput {
  name: String
  dob: String
  address: String
  description: String
}

type User {
  id: ID!
  _nest: User!
  _int(min: Int, max: Int): Int!
  _float(min: Float, max: Float, fixed: Int): Float!
  _boolean: Boolean!
  _string(type: String, locale: String, template: String, length: Int, syllables: Int, casing: String, min: Int, max: Int, pool: String, sentences: Int, words: Int, nationality: String, full: Boolean): String!
  name(length: Int): String!
  dob(length: Int): String!
  address(length: Int): String!
  description(length: Int): String!
}

input UsersWhere {
  and: [UsersWhere!]
  or: [UsersWhere!]
  not: [UsersWhere!]
  id_gt: Float
  id_ge: Float
  id_lt: Float
  id_le: Float
  id_eq: Float
  id_neq: Float
  id_in: [ID!]
  id_nin: [ID!]
  name_contains: String
  name_startswith: String
  name_endswith: String
  name_eq: String
  name_neq: String
  name_in: [String!]
  name_nin: [String!]
  name_exists: Boolean
  dob_contains: String
  dob_startswith: String
  dob_endswith: String
  dob_eq: String
  dob_neq: String
  dob_in: [String!]
  dob_nin: [String!]
  dob_exists: Boolean
  address_contains: String
  address_startswith: String
  address_endswith: String
  address_eq: String
  address_neq: String
  address_in: [String!]
  address_nin: [String!]
  address_exists: Boolean
  description_contains: String
  description_startswith: String
  description_endswith: String
  description_eq: String
  description_neq: String
  description_in: [String!]
  description_nin: [String!]
  description_exists: Boolean
  search: String
  like: String
}

